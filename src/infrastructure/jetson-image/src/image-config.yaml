# JetPack 6.0 Custom Image Configuration
# For FootballVision Pro - NVIDIA Jetson Orin Nano Super

image:
  name: "footballvision-jetson"
  version: "1.0.0"
  base: "jetpack-6.0-r36.2.0"
  architecture: "arm64"
  target_device: "jetson-orin-nano-super"

# System configuration
system:
  hostname: "footballvision-{{SERIAL}}"
  timezone: "UTC"
  locale: "en_US.UTF-8"
  keyboard: "us"

  # Boot optimization
  boot:
    timeout: 3
    quiet: true
    splash: false
    plymouth: false

  # Disable unnecessary services
  disable_services:
    - bluetooth
    - cups
    - avahi-daemon
    - ModemManager
    - whoopsie
    - apport

  # Enable required services
  enable_services:
    - nvargus-daemon
    - nvpmodel
    - jetson-clocks
    - ssh
    - networking
    - systemd-timesyncd

# Kernel configuration
kernel:
  version: "5.15.0-tegra"

  # Built-in modules (compiled into kernel)
  builtin_modules:
    # Camera support
    - VIDEO_IMX477
    - VIDEO_TEGRA_VI
    - VIDEO_TEGRA_CSI
    - VIDEO_V4L2_SUBDEV_API

    # Storage
    - NVME_CORE
    - NVME_MULTIPATH
    - NVME_TCP
    - EXT4_FS

    # Network
    - E1000E
    - IGB
    - IXGBE
    - R8169

  # Loadable modules
  modules:
    - imx477
    - v4l2loopback
    - nvhost-vi
    - nvhost-isp

  # Kernel parameters
  cmdline:
    - "quiet"
    - "splash=0"
    - "console=ttyTCU0,115200"
    - "video=efifb:off"
    - "isolcpus=1,2,3,4,5"  # Reserve CPUs for video processing
    - "nohz_full=1,2,3,4,5"
    - "rcu_nocbs=1,2,3,4,5"
    - "irqaffinity=0"        # IRQs on CPU 0 only
    - "transparent_hugepage=never"
    - "processor.max_cstate=1"  # Low latency
    - "intel_idle.max_cstate=0"

# NVIDIA components
nvidia:
  # CUDA toolkit
  cuda:
    version: "12.2"
    components:
      - cuda-toolkit-12-2
      - cuda-libraries-12-2
      - cuda-runtime-12-2
      - cuda-command-line-tools-12-2
      - cuda-nvcc-12-2

    # CUDA optimization
    environment:
      CUDA_CACHE_MAXSIZE: "2147483648"  # 2GB
      CUDA_CACHE_PATH: "/var/cache/cuda"
      CUDA_FORCE_PTX_JIT: "0"
      CUDA_LAUNCH_BLOCKING: "0"

  # cuDNN
  cudnn:
    version: "8.9"
    packages:
      - libcudnn8
      - libcudnn8-dev

  # TensorRT
  tensorrt:
    version: "8.6"
    packages:
      - tensorrt
      - python3-libnvinfer
      - python3-libnvinfer-dev
      - libnvinfer-plugin8

  # VPI (Vision Programming Interface)
  vpi:
    version: "3.0"
    packages:
      - libnvvpi3
      - vpi3-dev
      - vpi3-samples

  # Multimedia API
  multimedia:
    packages:
      - nvidia-l4t-multimedia
      - nvidia-l4t-multimedia-utils
      - nvidia-l4t-camera
      - nvidia-l4t-gstreamer

  # Argus camera library
  argus:
    enable: true
    packages:
      - nvidia-l4t-jetson-multimedia-api
      - nvidia-l4t-3d-core

  # Power management
  nvpmodel:
    default_mode: "MAXN"  # Maximum performance
    custom_modes:
      - name: "RECORDING"
        cpu_online: "0-5"
        cpu_freq: "1900000"  # 1.9 GHz
        gpu_freq: "1020000"  # 1.02 GHz
        emc_freq: "3200000"  # Memory bandwidth
        power_budget: "25W"

# Storage configuration
storage:
  # Root filesystem
  rootfs:
    type: "ext4"
    size: "16GB"
    options:
      - "noatime"
      - "nodiratime"
      - "commit=60"
      - "barrier=0"

  # Data partition (NVMe)
  data:
    mountpoint: "/mnt/recordings"
    type: "ext4"
    options:
      - "noatime"
      - "nodiratime"
      - "data=writeback"
      - "commit=120"
      - "barrier=0"

    # Automatic partition creation
    auto_partition: true
    size: "remaining"

# Network configuration
network:
  # WiFi optimization
  wifi:
    country: "US"
    regulatory_domain: "US"

    # Performance tuning
    parameters:
      rtw_power_mgnt: 0        # Disable power management
      rtw_ips_mode: 0          # Disable IPS
      rtw_lps_level: 0         # Disable LPS

  # Ethernet (preferred)
  ethernet:
    dhcp: true
    fallback_ip: "192.168.1.100"

  # Upload manager
  upload:
    enable: true
    bandwidth_limit: "300Mbps"
    concurrent_uploads: 2

# System packages
packages:
  # Development tools
  development:
    - build-essential
    - cmake
    - git
    - python3-dev
    - python3-pip
    - device-tree-compiler
    - linux-headers-generic

  # Video utilities
  video:
    - v4l-utils
    - media-ctl
    - ffmpeg
    - gstreamer1.0-tools
    - gstreamer1.0-plugins-base
    - gstreamer1.0-plugins-good
    - gstreamer1.0-plugins-bad
    - gstreamer1.0-plugins-ugly
    - gstreamer1.0-libav

  # System utilities
  system:
    - htop
    - iotop
    - sysstat
    - nvme-cli
    - smartmontools
    - lm-sensors
    - i2c-tools
    - can-utils

  # Network utilities
  network:
    - net-tools
    - iproute2
    - iperf3
    - tcpdump
    - ethtool
    - wireless-tools

  # Monitoring
  monitoring:
    - prometheus-node-exporter
    - collectd

  # Remove unnecessary packages
  remove:
    - libreoffice*
    - thunderbird*
    - rhythmbox*
    - shotwell*
    - gnome-games*
    - ubuntu-desktop
    - gnome-shell

# Python environment
python:
  version: "3.10"

  packages:
    - numpy
    - opencv-python
    - pillow
    - pyyaml
    - requests
    - aiohttp
    - pydantic
    - fastapi
    - uvicorn

  # NVIDIA packages
  nvidia_packages:
    - pycuda
    - tensorrt
    - onnx
    - onnxruntime-gpu

# User configuration
users:
  # Primary user
  - name: "vision"
    uid: 1000
    groups:
      - sudo
      - video
      - i2c
      - dialout
      - gpio
      - nvargus
    shell: "/bin/bash"

    # Auto-login for kiosk mode
    autologin: true

    # SSH keys
    ssh_authorized_keys_url: "{{SSH_KEYS_URL}}"

# Security
security:
  # SSH hardening
  ssh:
    port: 22
    permit_root_login: false
    password_authentication: false
    pubkey_authentication: true

  # Firewall
  ufw:
    enable: true
    default_policy: "deny"
    rules:
      - { port: 22, proto: "tcp", allow: true }     # SSH
      - { port: 80, proto: "tcp", allow: true }     # HTTP
      - { port: 443, proto: "tcp", allow: true }    # HTTPS
      - { port: 8554, proto: "tcp", allow: true }   # RTSP

  # Automatic updates
  unattended_upgrades:
    enable: false  # Manual updates only for stability

# Optimization
optimization:
  # CPU governor
  cpu_governor: "performance"

  # I/O scheduler
  io_scheduler:
    nvme: "none"    # For NVMe SSDs
    sd: "mq-deadline"

  # Swappiness
  vm_swappiness: 10

  # Huge pages
  transparent_hugepage: "never"

  # File descriptors
  fs_file_max: 1000000

  # Network buffers
  net_core_rmem_max: 268435456
  net_core_wmem_max: 268435456

  # Disable unnecessary features
  disable:
    - ipv6
    - bluetooth
    - wifi_powersave

# Post-install scripts
post_install:
  scripts:
    - name: "optimize-nvme"
      path: "/opt/footballvision/scripts/optimize-nvme.sh"

    - name: "setup-cuda-cache"
      path: "/opt/footballvision/scripts/setup-cuda-cache.sh"

    - name: "configure-cameras"
      path: "/opt/footballvision/scripts/configure-cameras.sh"

    - name: "benchmark-system"
      path: "/opt/footballvision/scripts/benchmark-system.sh"

# Validation tests
validation:
  - name: "cuda_check"
    command: "nvcc --version && python3 -c 'import pycuda.driver; pycuda.driver.init()'"

  - name: "camera_check"
    command: "ls /dev/video* && v4l2-ctl --list-devices"

  - name: "nvme_check"
    command: "nvme list && sudo fio --filename=/mnt/recordings/test --direct=1 --rw=write --bs=1M --size=1G --numjobs=1 --name=nvme-test"

  - name: "network_check"
    command: "ip addr && ping -c 4 8.8.8.8"

  - name: "performance_check"
    command: "/opt/footballvision/scripts/benchmark-system.sh"